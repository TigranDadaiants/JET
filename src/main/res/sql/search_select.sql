SELECT TOP 100
TMP_SELL_ORDERS.TYPE_ID,
TMP_SELL_ORDERS.ORDER_ID AS SELL_ORDER_ID,
TMP_BUY_ORDERS.ORDER_ID AS BUY_ORDER_ID,
TMP_SELL_ORDERS.LOCATION_ID AS SELL_LOCATION,
TMP_BUY_ORDERS.LOCATION_ID AS BUY_LOCATION,
TMP_SELL_ORDERS.PRICE AS SELL_PRICE,
TMP_BUY_ORDERS.PRICE AS BUY_PRICE,
TMP_SELL_ORDERS.VOLUME AS SELL_VOLUME,
TMP_BUY_ORDERS.VOLUME AS BUY_VOLUME,
TMP_BUY_ORDERS.MIN_VOLUME AS BUY_MIN_VOLUME,
(
CASE WHEN (:cargo_volume / STATIC_TYPES.VOLUME) > TMP_SELL_ORDERS.VOLUME
THEN TMP_SELL_ORDERS.VOLUME
ELSE (:cargo_volume / STATIC_TYPES.VOLUME) END) AS TRADE_VOLUME,
STATIC_TYPES.VOLUME * TMP_SELL_ORDERS.VOLUME AS ITEM_CARGO_VOLUME,
(:cargo_volume - (STATIC_TYPES.VOLUME * TMP_SELL_ORDERS.VOLUME)) AS ITEM_CARGO_FREE_VOLUME,
((
CASE WHEN (:cargo_volume / STATIC_TYPES.VOLUME) > TMP_SELL_ORDERS.VOLUME
THEN TMP_SELL_ORDERS.VOLUME
ELSE (:cargo_volume / STATIC_TYPES.VOLUME)
END
) * (TMP_BUY_ORDERS.PRICE - TMP_SELL_ORDERS.PRICE - (TMP_SELL_ORDERS.PRICE * :tax_rate))) AS PROFIT
FROM TMP_SELL_ORDERS
INNER JOIN TMP_BUY_ORDERS
	ON TMP_SELL_ORDERS.TYPE_ID = TMP_BUY_ORDERS.TYPE_ID
	AND TMP_BUY_ORDERS.MIN_VOLUME <= TMP_SELL_ORDERS.VOLUME
	AND (TMP_BUY_ORDERS.PRICE / TMP_SELL_ORDERS.PRICE) < 1.5
	AND (TMP_BUY_ORDERS.VOLUME - TMP_SELL_ORDERS.VOLUME) >= 0
	AND (TMP_BUY_ORDERS.PRICE - TMP_SELL_ORDERS.PRICE) > (TMP_SELL_ORDERS.PRICE * :tax_rate)
INNER JOIN STATIC_TYPES
	ON TMP_SELL_ORDERS.TYPE_ID = STATIC_TYPES.TYPE_ID
	AND TMP_BUY_ORDERS.MIN_VOLUME <= (:cargo_volume / STATIC_TYPES.VOLUME)
INNER JOIN TMP_AVAL_VOLUMES
	ON TMP_SELL_ORDERS.TYPE_ID = TMP_AVAL_VOLUMES.TYPE_ID
	AND TMP_BUY_ORDERS.VOLUME <= TMP_AVAL_VOLUMES.VOLUME_AVALIABLE
ORDER BY PROFIT DESC
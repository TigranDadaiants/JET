
com.github.tddts.evetrader.consts.AuthorizationType.IMPLICIT=Implicit (20 min)
com.github.tddts.evetrader.consts.AuthorizationType.DEV=Dev (id + key)

com.github.tddts.evetrader.consts.RouteOption.SHORTEST=Shortest
com.github.tddts.evetrader.consts.RouteOption.SECURE=Secure
com.github.tddts.evetrader.consts.RouteOption.INSECURE=Insecure

com.github.tddts.evetrader.consts.RestDataSource.TRANQULITY=Tranquility
com.github.tddts.evetrader.consts.RestDataSource.SINGULARITY=Singularity

com.github.tddts.evetrader.context.events.SearchStatusEvent.CLEARING_CACHE=Clearing cached data...
com.github.tddts.evetrader.context.events.SearchStatusEvent.LOADING_PRICES=Loading prices...
com.github.tddts.evetrader.context.events.SearchStatusEvent.LOADING_ORDERS=Loading market orders...
com.github.tddts.evetrader.context.events.SearchStatusEvent.FILTERING_ORDERS=Filtering orders...
com.github.tddts.evetrader.context.events.SearchStatusEvent.SEARCHING_FOR_PROFIT=Searching for profitable orders...
com.github.tddts.evetrader.context.events.SearchStatusEvent.SEARCHING_FOR_ROUTES=Searching for routes...
com.github.tddts.evetrader.context.events.SearchStatusEvent.NO_ORDERS_FOUND=No orders found
com.github.tddts.evetrader.context.events.SearchStatusEvent.FINISHED=Search finished